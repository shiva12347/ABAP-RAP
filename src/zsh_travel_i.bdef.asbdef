managed implementation in class zbp_sh_travel_i unique;
strict ( 2 );  // Ensure for Strict Syntax

with draft;  // For Enabling Draft Method

define behavior for ZSH_TRAVEL_I //alias <alias_name>
persistent table zsh_travel

draft table zsh_d_travel

lock master
total etag LocalLastChangedAt
authorization master ( global,instance )
 etag master LocalLastChangedAt  // system detech the latest timestamp and prevent Overtime
{
  create ( authorization : global );
  update;
  delete; // user can cancel / delete the entire ( including its child booking and booksuppl
  //field ( readonly ) TravelUuid;
  field(numbering : managed,readonly )TravelUuid;
  association _Booking { create; with draft; }  // user can do booking  to current travel

draft action Edit;
draft action Discard;
draft action Resume;
draft action Activate optimized;
draft determine action Prepare;


  // mapping alias named to understand by Ui FrameWork
  mapping for zsh_travel
  {

  // cds enity alias name LHS = data filed name RHS

traveluuid     = travel_uuid ;
travelid       = travel_id   ;
agencyid       = agency_id   ;
customerid     = customer_id ;
begindate      = begin_date  ;
enddate        = end_date    ;
bookingfee     = booking_fee ;
totalprice     = Total_Price ;
currencycode   = currency_code ;
description    = description   ;
overallstatus  =  overall_status ;
localcreatedby = local_created_by ;
localcreatedat  = local_created_at ;
locallastchangedby = local_last_changed_by ;
locallastchangedat = local_last_changed_at ;
lastchangedat      = last_changed_at       ;

}

}


define behavior for ZSH_BOOKING_I alias Booking
persistent table zsh_booking

draft table zsh_d_booking

lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;
  field (readonly) TravelUUID ;
  field ( numbering : managed , readonly ) BookingUuid;
  association _Travel { with draft; }   // TravelUuid
  association _BookingSupplement { create; with draft;}

  mapping for zsh_booking
  {

     BookingUuid = booking_uuid;
    TravelUUID  = parent_uuid;
     BookingId   =  booking_id;
     BookingDate = booking_date;
    CustomerId   = customer_id;
    CarrierId    = carrier_id;
    ConnectionId = connection_id;
    FlightDate   = flight_date;
    FlightPrice  = flight_price;
    CurrencyCode = currency_code;
    BookingStatus = booking_status;
    LocalLastChangedAt = local_last_changed_at;

  }
}


define behavior for ZSH_BOOKINGSUPP_I alias BookingSuppl
persistent table zsh_bksuppl

draft table zsh_d_bksuppl

lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;
  field ( numbering : managed, readonly ) BooksupplUuid;
  field (readonly) BookingUUID , TravelUUID;
   association _Travel{ with draft; }
   association _Booking{ with draft;}

   mapping for zsh_bksuppl
   {

  BooksupplUuid = booksuppl_uuid;
TravelUUID    = root_uuid;
BookingUUID   = parent_uuid;
BookingSupplementId = booking_supplement_id;
SupplementId        = supplement_id;
Price               = price;
CurrencyCode        = currency_code;
LocalLastChangedAt  = local_last_changed_at;

  }
}